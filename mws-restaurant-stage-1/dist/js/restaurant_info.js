"use strict";var getParameterByName,fillRestaurantHTML,fillBreadcrumb,fillRestaurantHoursHTML,fillReviewsHTML,createReviewHTML,addReview,submitReview,starClick,orderByDate,restaurant=void 0;window.initMap=function(){var e=getParameterByName("id");e?DBHelper.fetchRestaurantById(e).then(function(e){self.restaurant=e,fillRestaurantHTML(),self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:e.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map)}).catch(function(e){return console.error(e)}):console.error("No restaurant id in URL")},fillRestaurantHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant;document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;var t=document.getElementById("restaurant-picture");t.className="restaurant-picture";var n=document.createElement("source");n.media="(min-width: 1024px)",n.sizes="100vw",n.srcset=DBHelper.imageUrlForRestaurant(e),t.append(n);var a=document.createElement("source");a.media="(min-width: 415px) and (max-width: 768px)",a.sizes="100vw",a.srcset=DBHelper.srcsetUrlMediumForRestaurant(e),t.append(a);var r=document.createElement("source");r.media="(max-width: 414px)",r.sizes="100vw",r.srcset=DBHelper.srcsetUrlSmallForRestaurant(e),t.append(r);var s=document.createElement("img");s.className="restaurant-img",s.alt=DBHelper.imageAltForRestaurants(e),s.src=DBHelper.imageUrlForRestaurant(e),t.append(s),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML();var i=document.getElementById("empty-heart"),l=document.getElementById("red-heart");i&&l&&("true"===self.restaurant.is_favorite?(l.classList.remove("invisible"),i.classList.add("invisible")):(l.classList.add("invisible"),i.classList.remove("invisible"))),i.addEventListener("click",function(){i.classList.add("invisible"),l.classList.remove("invisible"),DBHelper.favorRestaurant(self.restaurant.id)}),l.addEventListener("click",function(){l.classList.add("invisible"),i.classList.remove("invisible"),DBHelper.unfavorRestaurant(self.restaurant.id)})},fillRestaurantHoursHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant.operating_hours,t=document.getElementById("restaurant-hours");for(var n in e){var a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,r.className="weekday",a.appendChild(r);var s=document.createElement("td");s.innerHTML=e[n],s.className="time",a.appendChild(s),t.appendChild(a)}},orderByDate=function(n,a){return n.slice().sort(function(e,t){return n[a]<t[a]?-1:1})},fillReviewsHTML=function(){var n=document.getElementById("reviews-container"),a=[],r=document.getElementById("reviews-list");r.innerHTML="",DBHelper.fetchRestaurantReviews(self.restaurant.id).then(function(e){if(!(a=self.orderByDate(e,"createdAt"))){document.body.classList.add("full-height");var t=document.createElement("p");return t.innerHTML="No reviews yet!",void n.appendChild(t)}a.forEach(function(e){r.appendChild(createReviewHTML(e))}),n.appendChild(r)}).catch(function(e){return console.error(e)})},createReviewHTML=function(e){var t=document.createElement("li"),n=document.createElement("p");n.className="review-name",n.innerHTML=e.name,t.appendChild(n);var a=document.createElement("p"),r=new Date(e.updatedAt).toDateString().split(" ");a.innerHTML=r[1]+" "+r[2]+", "+r[3],a.className="review-date",t.appendChild(a);var s=document.createElement("p");if(s.innerHTML="Rating: "+e.rating,s.className="review-rating",t.appendChild(s),e.comments){var i=document.createElement("p");i.innerHTML=e.comments,t.appendChild(i)}return t},fillBreadcrumb=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant,t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)},getParameterByName=function(e,t){t||(t=window.location.href),e=e.replace(/[[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null},submitReview=function(){for(var e=1;e<=5;e++)document.getElementById("empty-star-"+e).classList.remove("invisible"),document.getElementById("full-star-"+e).classList.add("invisible")};var username=document.getElementById("username"),userrating=document.getElementById("userrating"),form=document.getElementById("form");form.addEventListener("change",function(){username.value&&userrating.value&&(form.elements[3].disabled=!1)}),starClick=function(e){var t=e.split("-")[0],n=e.split("-")[2];switch(t){case"empty":userrating.value=parseInt(n);for(var a=1;a<=parseInt(n);a++)document.getElementById("empty-star-"+a).classList.add("invisible"),document.getElementById("full-star-"+a).classList.remove("invisible");username.value&&(form.elements[3].disabled=!1);break;case"full":1<userrating.value?userrating.value=parseInt(n)-1:userrating.value=null;for(var r=parseInt(n)+1;r<=5;r++)document.getElementById("empty-star-"+r).classList.remove("invisible"),document.getElementById("full-star-"+r).classList.add("invisible");username.value&&(form.elements[3].disabled=!1)}};var button=document.getElementById("formhandler"),dismissButton=document.getElementById("dismiss-button"),successMessage=document.getElementById("review-success"),offlineMessage=document.getElementById("review-offline");button.addEventListener("click",function(e){var t=new FormData;if(t.append("restaurant_id",self.restaurant.id),t.append("name",form.name.value),t.append("rating",parseInt(form.rating.value)),t.append("createdAt",Date.now()),form.comments.value&&t.append("comments",form.comments.value),!navigator.onLine){var n={restaurant_id:self.restaurant.id,name:form.name.value,rating:parseInt(form.rating.value),comments:form.comments.value,createdAt:Date.now()};return DBHelper.openDB().then(function(e){var t=e.transaction("outbox","readwrite");return t.objectStore("outbox").put(n),t.complete}).then(function(){form.reset(),console.log("Review has been stored in the IndexedDB."),offlineMessage.classList.remove("invisible"),setTimeout(function(){offlineMessage.classList.add("invisible")},3e3)}).catch(function(e){throw console.log("Something went wrong with the database."),console.error(e),e})}DBHelper.addRestaurantReview(t).then(function(){form.reset(),self.fillReviewsHTML(),successMessage.classList.remove("invisible"),console.log("Review has been published."),setTimeout(function(){successMessage.classList.add("invisible")},3e3)})}),dismissButton.addEventListener("click",function(e){form.reset()}),document.addEventListener("online",function(e){return console.log("online again!"),DBHelper.openDB().then(function(e){return e.transaction("outbox","readonly").objectStore("outbox").getAll()}).then(function(e){if(e&&0<e.length)return Promise.all(e.map(function(t){var e=new FormData;return e.append("restaurant_id",t.restaurant_id),e.append("name",t.name),e.append("rating",t.rating),e.append("createdAt",t.createdAt),t.comments&&e.append("comments",t.comments),fetch(DBHelper.REVIEWS_URL+"/",{method:"POST",body:e}).then(function(e){return e.json()}).then(function(e){if(e)return DBHelper.openDB().then(function(e){return e.transaction("outbox","readwrite").objectStore("outbox").delete(t.id)})}).catch(function(e){throw console.error(e),e}).then(function(){self.fillReviewsHTML(),successMessage.classList.remove("invisible"),setTimeout(function(){successMessage.classList.add("invisible")},3e3),console.log("Review has been sent to the server and removed from the IndexedDB.")})}))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
