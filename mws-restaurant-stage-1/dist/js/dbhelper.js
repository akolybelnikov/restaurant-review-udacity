"use strict";var _createClass=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var DBHelper=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"openDB",value:function(){if("indexedDB"in window)return idb.open("restaurants-app",1,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants",{keyPath:"id"}).createIndex("name","id",{unique:!0});case 1:e.createObjectStore("outbox",{autoIncrement:!0,keyPath:"id"})}});console.log("This browser doesn't support IndexedDB")}},{key:"addRestaurants",value:function(r){return this.openDB().then(function(e){var t=e.transaction("restaurants","readwrite"),n=t.objectStore("restaurants");return Promise.all(r.map(function(e){return n.put(e)})).catch(function(e){t.abort(),console.error(e)})}).catch(function(e){return console.error(e)})}},{key:"fetchRestaurantsFromServer",value:function(){var n=this;return new Promise(function(t,e){fetch(n.DATABASE_URL).then(function(e){t(e.json())})})}},{key:"fetchRestaurants",value:function(){var t=this;return this.openDB().then(function(e){return e.transaction("restaurants","readwrite").objectStore("restaurants").getAll()}).then(function(e){return e&&0!==e.length?e:t.fetchRestaurantsFromServer().then(function(e){return t.addRestaurants(e),e}).catch(function(e){return console.error(e)})})}},{key:"fetchRestaurantFromServerById",value:function(n){var r=this;return new Promise(function(t,e){fetch(r.DATABASE_URL+"/"+n).then(function(e){return t(e.json())})}).catch(function(e){return console.error(e)})}},{key:"fetchAllRestaurantReviews",value:function(){var n=this;return new Promise(function(t,e){fetch(""+n.REVIEWS_URL).then(function(e){return t(e.json())})}).catch(function(e){return console.error(e)})}},{key:"fetchRestaurantReviews",value:function(n){var r=this;return new Promise(function(t,e){fetch(r.REVIEWS_URL+"/?restaurant_id="+n).then(function(e){return t(e.json())})}).catch(function(e){return console.error(e)})}},{key:"fetchReviewById",value:function(n){var r=this;return new Promise(function(t,e){fetch(r.REVIEWS_URL+"/"+n).then(function(e){return t(e.json())})}).catch(function(e){return console.error(e)}).then(function(e){return console.table(e)})}},{key:"addRestaurantReview",value:function(e){return fetch(this.REVIEWS_URL+"/",{method:"POST",body:e}).then(function(e){return e.json()}).catch(function(e){return console.error(e)})}},{key:"removeRestaurantReview",value:function(e){return fetch(this.REVIEWS_URL+"/"+e,{method:"DELETE"})}},{key:"editRestaurantReview",value:function(e,t){return fetch(this.REVIEWS_URL+"/"+e,{method:"PUT",body:t})}},{key:"fetchRestaurantById",value:function(t){var n=this;return this.openDB().then(function(e){return e.transaction("restaurants","readonly").objectStore("restaurants").index("name").get(parseInt(t))}).then(function(e){return e||n.fetchRestaurantFromServerById(t)})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"imageUrlForRestaurant",value:function(e){return"img/"+e.id+".jpg"}},{key:"srcsetUrlSmallForRestaurant",value:function(e){return"/responsive-images/"+e.id+"-320_small_2x.jpg 2x, /responsive-images/"+e.id+"-160_small_1x.jpg 1x"}},{key:"srcsetUrlMediumForRestaurant",value:function(e){return"/responsive-images/"+e.id+"-640_medium_2x.jpg 2x, /responsive-images/"+e.id+"-320_medium_1x.jpg 1x"}},{key:"imageAltForRestaurants",value:function(e){return"Restaurant "+e.name+" in "+e.neighborhood}},{key:"mapMarkerForRestaurant",value:function(e,t){var n=new google.maps.Marker({position:e.latlng,title:e.name,url:this.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP});return setTimeout(function(){var e=document.getElementsByClassName("gm-style");e[0]&&(e[0].children[1].setAttribute("title","Google map with the restaurants location"),e[0].children[1].contentWindow.document.childNodes[0].setAttribute("lang","en"))},1e3),n}},{key:"favorRestaurant",value:function(e){var n=this;fetch("http://localhost:1337/restaurants/"+self.restaurant.id+"/?is_favorite=true",{method:"PUT"}).then(function(e){return e.json()}).then(function(t){return n.openDB().then(function(e){return e.transaction("restaurants","readwrite").objectStore("restaurants").put(t).complete})}).catch(function(e){return console.error(e)})}},{key:"unfavorRestaurant",value:function(e){var n=this;fetch("http://localhost:1337/restaurants/"+self.restaurant.id+"/?is_favorite=false",{method:"PUT"}).then(function(e){return e.json()}).then(function(t){return n.openDB().then(function(e){return e.transaction("restaurants","readwrite").objectStore("restaurants").put(t).complete})}).catch(function(e){return console.error(e)})}},{key:"DATABASE_URL",get:function(){return"https://reviews-staging.herokuapp.com/restaurants"}},{key:"REVIEWS_URL",get:function(){return"https://reviews-staging.herokuapp.com/reviews"}}]),e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
